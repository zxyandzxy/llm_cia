ExpressionColumn : ['TypeCasting(TC): Type Casting found: (ExpressionColumn) namedJoinColumnExpressions.get(name),', 'ReturnType(RT): Return Type found: getColumnExpression returns ExpressionColumn,', 'Method Member Variable Usage Variable (MMAUA): Coupling found in method addTableColumns, at line: 577. Instance of ExpressionColumn is created and used directly.  Coupling found in method addTableColumns, at line: 621. Instance of ExpressionColumn is created and used directly.', 'StaticMethodInvoking(SMI): Static Method Invoking found: ExpressionColumn.checkColumnsResolved(unresolved),  Static Method Invoking found: ExpressionColumn.checkColumnsResolved(unresolved),', 'ConstructorInvoking(CMI): Construction Method Invoking found: new ExpressionColumn(this, i),  Construction Method Invoking found: new ExpressionColumn(this, i),']
RangeVariableJoined : ['Inheritance(IH): Inheritance found: RangeVariableJoined extends RangeVariable,']
RangeVariableResolver : ['StaticMethodInvoking(SMI): Static Method Invoking found: RangeVariableResolver.decomposeAndConditions(session, joinConditions[0].nonIndexCondition, conditionsList),  Static Method Invoking found: RangeVariableResolver.decomposeAndConditions(session, whereConditions[0].nonIndexCondition, conditionsList),']
ExpressionColumnAccessor : ['There are no coupling dependencies between these two entities']
StatementDML : ['There are no coupling dependencies between these two entities']
SessionContext : ['There are no coupling dependencies between these two entities']
QuerySpecification : ['TypeCasting(TC): Type Casting found: (QuerySpecification) queryExpression,  Type Casting found: (QuerySpecification) queryExpression,', 'Instanceof(IO): Instanceof found: queryExpression instanceof QuerySpecification,']
StatementDMQL : ['There are no coupling dependencies between these two entities']
ExpressionLogical : ['TypeCasting(TC): Type Casting found: (ExpressionLogical) e,', 'Instanceof(IO): Instanceof found: e instanceof ExpressionLogical,', 'Method Member Variable Usage Variable (MMAUA): Coupling found in method addIndexCondition, at line: 1914. Instance of ExpressionLogical is created and used directly.  Coupling found in method addIndexCondition, at line: 1915. Instance of ExpressionLogical is created and used directly.', 'StaticMethodInvoking(SMI): Static Method Invoking found: ExpressionLogical.andExpressions(joinCondition, e),  Static Method Invoking found: ExpressionLogical.andExpressions(condition, e),  Static Method Invoking found: ExpressionLogical.andExpressions(nonIndexCondition, e),  Static Method Invoking found: ExpressionLogical.andExpressions(nonIndexCondition, indexCond[indexedColumnCount - 1]),  Static Method Invoking found: ExpressionLogical.andExpressions(indexEndCond[indexedColumnCount - 1], e.nodes[2]),  Static Method Invoking found: ExpressionLogical.andExpressions(indexEndCondition, e),  Static Method Invoking found: ExpressionLogical.newNotNullCondition(e.getLeftNode()),  Static Method Invoking found: ExpressionLogical.andExpressions(indexEndCondition, e),  Static Method Invoking found: ExpressionLogical.andExpressions(indexEndCondition, e),  Static Method Invoking found: ExpressionLogical.andExpressions(indexEndCondition, e),', 'ConstructorInvoking(CMI): Construction Method Invoking found: new ExpressionLogical(OpTypes.IS_NULL, e),  Construction Method Invoking found: new ExpressionLogical(OpTypes.NOT, e),']
StatementCompound : ['There are no coupling dependencies between these two entities']
Statement : ['There are no coupling dependencies between these two entities']
Expression : ['TypeCasting(TC): Type Casting found: (Expression) exprList.get(i),  Type Casting found: (Expression) conditionsList.get(i),  Type Casting found: (Expression) conditionsList.get(i),  Type Casting found: (Expression) conditionsList.get(i),', 'ReturnType(RT): Return Type found: getJoinCondition returns Expression,', 'Class Member Variable Usage Variable (CMAUA): Coupling found in method getJoinCondition, at line: 648. Instance of Expression member variable joinCondition is used directly.  Coupling found in method addJoinCondition, at line: 652. Instance of Expression member variable joinCondition is used directly.  Coupling found in method getSubqueries, at line: 674. Instance of Expression member variable joinCondition is used directly.  Coupling found in method collectAllExpressions, at line: 707. Instance of Expression member variable joinCondition is used directly.  Coupling found in method replaceColumnReferences, at line: 743. Instance of Expression member variable joinCondition is used directly.  Coupling found in method replaceColumnReferences, at line: 744. Instance of Expression member variable joinCondition is used directly.  Coupling found in method replaceRangeVariables, at line: 759. Instance of Expression member variable joinCondition is used directly.', 'Function Parameter Usage Variable (FPUA): Coupling found in method addCondition, at line: 1726. Instance of Expression parameter e is used directly.  Coupling found in method addCondition, at line: 1730. Instance of Expression parameter e is used directly.  Coupling found in method addCondition, at line: 1731. Instance of Expression parameter e is used directly.  Coupling found in method addCondition, at line: 1732. Instance of Expression parameter e is used directly.  Coupling found in method addCondition, at line: 1771. Instance of Expression parameter e is used directly.  Coupling found in method addCondition, at line: 1800. Instance of Expression parameter e is used directly.  Coupling found in method addToIndexConditions, at line: 1823. Instance of Expression parameter e is used directly.  Coupling found in method addToIndexEndConditions, at line: 1850. Instance of Expression parameter e is used directly.', 'StaticVariableInvoking(SAI): Static Variable Invoking found: addCondition invokes static variable EXPR_FALSE,', 'Function Parameter Invoking Variable (FPIA): Coupling found in method addTableColumns, at line: 630. Instance of Expression parameter expression is used to access Expression's member variable nodes.  Coupling found in method addCondition, at line: 1772. Instance of Expression parameter e is used to access Expression's member variable opType.  Coupling found in method addCondition, at line: 1773. Instance of Expression parameter e is used to access Expression's member variable opType.  Coupling found in method addCondition, at line: 1780. Instance of Expression parameter e is used to access Expression's member variable nodes.  Coupling found in method addCondition, at line: 1804. Instance of Expression parameter e is used to access Expression's member variable opType.  Coupling found in method addCondition, at line: 1805. Instance of Expression parameter e is used to access Expression's member variable opType.  Coupling found in method addToIndexConditions, at line: 1824. Instance of Expression parameter e is used to access Expression's member variable opType.  Coupling found in method addToIndexConditions, at line: 1825. Instance of Expression parameter e is used to access Expression's member variable opType.  Coupling found in method addToIndexEndConditions, at line: 1856. Instance of Expression parameter e is used to access Expression's member variable opType.  Coupling found in method addToIndexEndConditions, at line: 1857. Instance of Expression parameter e is used to access Expression's member variable opType.', 'StaticMethodInvoking(SMI): Static Method Invoking found: Expression.resolveColumnSet(session, RangeVariable.emptyArray, RangeGroup.emptyArray, unresolved),  Static Method Invoking found: Expression.resolveColumnSet(session, RangeVariable.emptyArray, RangeGroup.emptyArray, unresolved),', 'Function Parameter Invoking Method (FPIM): Coupling found in method addCondition, at line: 1751. Instance of Expression parameter e is used to callExpression's method getIndexableExpression.  Coupling found in method addCondition, at line: 1755. Instance of Expression parameter e is used to callExpression's method getLeftNode.  Coupling found in method addCondition, at line: 1758. Instance of Expression parameter e is used to callExpression's method getType.  Coupling found in method addCondition, at line: 1775. Instance of Expression parameter e is used to callExpression's method getType.  Coupling found in method addToIndexConditions, at line: 1822. Instance of Expression parameter e is used to callExpression's method getLeftNode.  Coupling found in method addToIndexEndConditions, at line: 1844. Instance of Expression parameter e is used to callExpression's method getLeftNode.  Coupling found in method addToIndexEndConditions, at line: 1847. Instance of Expression parameter e is used to callExpression's method getLeftNode.', 'ConstructorInvoking(CMAIM): Coupling found in method getSubqueries, at line: 675. Instance of Expression member variable joinCondition is used to call Expression's method collectAllSubqueries.  Coupling found in method collectAllExpressions, at line: 708. Instance of Expression member variable joinCondition is used to call Expression's method collectAllExpressions.  Coupling found in method replaceColumnReferences, at line: 744. Instance of Expression member variable joinCondition is used to call Expression's method replaceColumnReferences.  Coupling found in method replaceRangeVariables, at line: 760. Instance of Expression member variable joinCondition is used to call Expression's method replaceRangeVariables.']
Routine : ['There are no coupling dependencies between these two entities']
CompileContext : ['CompileContext is not exist in project code']
RangeIterator : ['ReturnType(RT): Return Type found: getIterator returns RangeIterator,']
RowSetNavigator : ['There are no coupling dependencies between these two entities']
RangeVariableConditions : ['RangeVariableConditions is not exist in project code']
TriggerDef : ['There are no coupling dependencies between these two entities']
RangeIteratorBase : ['RangeIteratorBase is not exist in project code']
RangeIteratorJoined : ['RangeIteratorJoined is not exist in project code']
RangeIteratorMain : ['RangeIteratorMain is not exist in project code']
QueryExpression : ['There are no coupling dependencies between these two entities']
ParserRoutine : ['There are no coupling dependencies between these two entities']
RangeIteratorRight : ['RangeIteratorRight is not exist in project code']
ParserDML : ['There are no coupling dependencies between these two entities']
ParserDQL : ['There are no coupling dependencies between these two entities']
ExpressionAccessor : ['There are no coupling dependencies between these two entities']
ExpressionLike : ['There are no coupling dependencies between these two entities']
Tokens : ['There are no coupling dependencies between these two entities']
TriggerDefSQL : ['There are no coupling dependencies between these two entities']
SortAndSlice : ['There are no coupling dependencies between these two entities']
StatementSet : ['There are no coupling dependencies between these two entities']
Charset : ['There are no coupling dependencies between these two entities']
ExpressionOp : ['There are no coupling dependencies between these two entities']
ExpressionAggregate : ['There are no coupling dependencies between these two entities']
ExpressionArrayAggregate : ['There are no coupling dependencies between these two entities']
ExpressionArithmetic : ['There are no coupling dependencies between these two entities']
FunctionSQLInvoked : ['There are no coupling dependencies between these two entities']
Like : ['There are no coupling dependencies between these two entities']
StatementTypes : ['There are no coupling dependencies between these two entities']
SchemaObject : ['There are no coupling dependencies between these two entities']
