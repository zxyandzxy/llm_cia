TriggerDef : ['ReturnType(RT): Return Type found: getTrigger returns TriggerDef,', 'StaticVariableInvoking(SAI): Static Variable Invoking found: releaseTriggers invokes static variable NUM_TRIGS,  Static Variable Invoking found: releaseTriggers invokes static variable emptyArray,  Static Variable Invoking found: releaseTriggers invokes static variable emptyArray,  Static Variable Invoking found: terminateTriggers invokes static variable NUM_TRIGS,', 'Function Parameter Invoking Variable (FPIA): Coupling found in method addTrigger, at line: 1931. Instance of TriggerDef parameter td is used to access TriggerDef's member variable triggerType.  Coupling found in method addTrigger, at line: 1948. Instance of TriggerDef parameter td is used to access TriggerDef's member variable triggerType.', 'Function Parameter Invoking Method (FPIM): Coupling found in method removeTrigger, at line: 1986. Instance of TriggerDef parameter trigger is used to callTriggerDef's method getName.  Coupling found in method removeTrigger, at line: 2007. Instance of TriggerDef parameter trigger is used to callTriggerDef's method getName.']
TableWorks : ['There are no coupling dependencies between these two entities']
TextCache : ['There are no coupling dependencies between these two entities']
Index : ['ReturnType(RT): Return Type found: getClusteredIndex returns Index,  Return Type found: getIndexForColumn returns Index,  Return Type found: getIndex returns Index,  Return Type found: createIndexForColumns returns Index,  Return Type found: getIndexForColumns returns Index,  Return Type found: getFullIndexForColumns returns Index,  Return Type found: getIndexForColumns returns Index,  Return Type found: getFullIndex returns Index,', 'Method Member Variable Usage Variable (MMAUA): Coupling found in method findIndexForColumns, at line: 2562. Instance of IndexUse is created and used directly.']
SubQuery : ['SubQuery is not exist in project code']
Token : ['There are no coupling dependencies between these two entities']
Transaction : ['Transaction is not exist in project code']
ConstraintCore : ['There are no coupling dependencies between these two entities']
ScriptReaderBase : ['There are no coupling dependencies between these two entities']
TableFilter : ['TableFilter is not exist in project code']
PointerNode : ['PointerNode is not exist in project code']
CachedRow : ['CachedRow is not exist in project code']
DatabaseInformationMain : ['There are no coupling dependencies between these two entities']
DITableInfo : ['There are no coupling dependencies between these two entities']
GridSwing : ['There are no coupling dependencies between these two entities']
BaseTable : ['BaseTable is not exist in project code']
DatabaseInformation : ['There are no coupling dependencies between these two entities']
DatabaseManagerCommon : ['There are no coupling dependencies between these two entities']
TableSorter : ['There are no coupling dependencies between these two entities']
DatabaseManagerSwing : ['There are no coupling dependencies between these two entities']
TriggerSample : ['There are no coupling dependencies between these two entities']
Expression : ['ReturnType(RT): Return Type found: getDataExpression returns Expression,']
HsqlDatabaseProperties : ['There are no coupling dependencies between these two entities']
ZaurusEditor : ['ZaurusEditor is not exist in project code']
SortableHeaderRenderer : ['SortableHeaderRenderer is not exist in project code']
TestBatchExecution : ['TestBatchExecution is not exist in project code']
jdbcColumnMetaData : ['jdbcColumnMetaData is not exist in project code']
RowInputTextLog : ['There are no coupling dependencies between these two entities']
HashIndex : ['There are no coupling dependencies between these two entities']
JDBCBench : ['There are no coupling dependencies between these two entities']
ZaurusTableForm : ['ZaurusTableForm is not exist in project code']
Parser : ['There are no coupling dependencies between these two entities']
Row : ['TypeCasting(TC): Type Casting found: (Row) store.getNewCachedObject(session, data, true),  Type Casting found: (Row) store.getNewCachedObject(session, data, true),  Type Casting found: (Row) store.getNewCachedObject(session, data, false),  Type Casting found: (Row) store.getNewCachedObject(session, data, false),', 'ReturnType(RT): Return Type found: insertSingleRow returns Row,  Return Type found: getDeleteRowFromLog returns Row,']
BaseHashMap : ['There are no coupling dependencies between these two entities']
TextTable : ['Inheritance(IH): Inheritance found: TextTable extends Table,', 'TypeCasting(TC): Type Casting found: (TextTable) this,  Type Casting found: (TextTable) this,  Type Casting found: (TextTable) tn,  Type Casting found: (TextTable) this,  Type Casting found: (TextTable) tn,  Type Casting found: (TextTable) this,  Type Casting found: (TextTable) tn,  Type Casting found: (TextTable) this,', 'Method Member Variable Usage Variable (MMAUA): Coupling found in method moveDefinition, at line: 1237. Instance of TextTable is created and used directly.', 'ConstructorInvoking(CMI): Construction Method Invoking found: new TextTable(database, tableName, newType),']
TestAllTypes : ['There are no coupling dependencies between these two entities']
ResultMetaData : ['There are no coupling dependencies between these two entities']
TestTimestamp : ['TestTimestamp is not exist in project code']
Transfer : ['There are no coupling dependencies between these two entities']
TestBatchBug : ['TestBatchBug is not exist in project code']
Constraint : ['ReturnType(RT): Return Type found: getPrimaryConstraint returns Constraint,  Return Type found: getNotNullConstraintForColumn returns Constraint,  Return Type found: getUniqueConstraintForColumns returns Constraint,  Return Type found: getFKConstraintForColumns returns Constraint,  Return Type found: getUniqueOrPKConstraintForIndex returns Constraint,  Return Type found: getConstraint returns Constraint,  Return Type found: getUniqueConstraintForIndex returns Constraint,', 'Method Member Variable Usage Variable (MMAUA): Coupling found in method createPrimaryKeyConstraint, at line: 1716. Instance of Constraint is created and used directly.', 'Function Parameter Usage Variable (FPUA): Coupling found in method moveDefinition, at line: 1228. Instance of Constraint parameter constraint is used directly.  Coupling found in method moveDefinition, at line: 1334. Instance of Constraint parameter constraint is used directly.', 'StaticVariableInvoking(SAI): Static Variable Invoking found: updateConstraintLists invokes static variable emptyArray,  Static Variable Invoking found: updateConstraintLists invokes static variable emptyArray,  Static Variable Invoking found: updateConstraintLists invokes static variable emptyArray,', 'Function Parameter Invoking Variable (FPIA): Coupling found in method moveDefinition, at line: 1314. Instance of Constraint parameter constraint is used to access Constraint's member variable core.  Coupling found in method moveDefinition, at line: 1315. Instance of Constraint parameter constraint is used to access Constraint's member variable core.  Coupling found in method moveDefinition, at line: 1316. Instance of Constraint parameter constraint is used to access Constraint's member variable core.', 'ConstructorInvoking(CMI): Construction Method Invoking found: new Constraint(indexName, this, getPrimaryIndex(), SchemaObject.ConstraintTypes.PRIMARY_KEY),', 'Function Parameter Invoking Method (FPIM): Coupling found in method addConstraint, at line: 840. Instance of Constraint parameter c is used to callConstraint's method getConstraintType.  Coupling found in method moveDefinition, at line: 1229. Instance of Constraint parameter constraint is used to callConstraint's method getConstraintType.  Coupling found in method moveDefinition, at line: 1282. Instance of Constraint parameter constraint is used to callConstraint's method getMainColumns.  Coupling found in method moveDefinition, at line: 1335. Instance of Constraint parameter constraint is used to callConstraint's method updateTable.  Coupling found in method getDependentConstraints, at line: 1460. Instance of Constraint parameter constraint is used to callConstraint's method getName.']
