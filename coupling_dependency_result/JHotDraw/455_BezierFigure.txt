BezierNodeEdit : ['There are no coupling dependencies between these two entities']
BezierTool : ['There are no coupling dependencies between these two entities']
BezierScaleHandle : ['ConstructorInvoking(CMI): Construction Method Invoking found: new BezierScaleHandle(this),']
BezierControlPointHandle : ['There are no coupling dependencies between these two entities']
AbstractConnectionHandle : ['There are no coupling dependencies between these two entities']
ODGBezierFigure : ['Inheritance(IH): Inheritance found: ODGBezierFigure extends BezierFigure,']
SVGBezierFigure : ['Inheritance(IH): Inheritance found: SVGBezierFigure extends BezierFigure,']
BezierOutlineHandle : ['ConstructorInvoking(CMI): Construction Method Invoking found: new BezierOutlineHandle(this, true),  Construction Method Invoking found: new BezierOutlineHandle(this),']
ODGInputFormat : ['There are no coupling dependencies between these two entities']
ChopBezierConnector : ['Method Member Variable Usage Variable (MMAUA): Coupling found in method findConnector, at line: 107. Instance of ChopBezierConnector is created and used directly.  Coupling found in method findCompatibleConnector, at line: 112. Instance of ChopBezierConnector is created and used directly.', 'ConstructorInvoking(CMI): Construction Method Invoking found: new ChopBezierConnector(this),  Construction Method Invoking found: new ChopBezierConnector(this),']
SVGPathFigure : ['There are no coupling dependencies between these two entities']
ODGPathFigure : ['There are no coupling dependencies between these two entities']
BezierNodeHandle : ['ConstructorInvoking(CMI): Construction Method Invoking found: new BezierNodeHandle(this, i),']
DefaultSVGFigureFactory : ['There are no coupling dependencies between these two entities']
ConnectionEndHandle : ['There are no coupling dependencies between these two entities']
SVGFigureFactory : ['There are no coupling dependencies between these two entities']
SVGOutputFormat : ['There are no coupling dependencies between these two entities']
PathTool : ['There are no coupling dependencies between these two entities']
BezierLabelLocator : ['There are no coupling dependencies between these two entities']
BezierPointLocator : ['There are no coupling dependencies between these two entities']
Example : ['Example is not exist in project code']
LineFigure : ['Inheritance(IH): Inheritance found: LineFigure extends BezierFigure,']
ImageMapOutputFormat : ['There are no coupling dependencies between these two entities']
DrawFigureFactory : ['There are no coupling dependencies between these two entities']
BezierPathIterator : ['There are no coupling dependencies between these two entities']
AttributeKeys : ['StaticMethodInvoking(SMI): Static Method Invoking found: AttributeKeys.getPerpendicularDrawGrowth(this),  Static Method Invoking found: AttributeKeys.getStrokeTotalWidth(this),  Static Method Invoking found: AttributeKeys.getPerpendicularFillGrowth(this),  Static Method Invoking found: AttributeKeys.getStrokeTotalWidth(this),  Static Method Invoking found: AttributeKeys.getStrokeTotalWidth(this),  Static Method Invoking found: AttributeKeys.getPerpendicularHitGrowth(this),  Static Method Invoking found: AttributeKeys.getStrokeTotalWidth(this),  Static Method Invoking found: AttributeKeys.getPerpendicularHitGrowth(this),  Static Method Invoking found: AttributeKeys.getStrokeTotalWidth(this),']
Bezier : ['There are no coupling dependencies between these two entities']
SVGInputFormat : ['There are no coupling dependencies between these two entities']
Liner : ['There are no coupling dependencies between these two entities']
BezierPath : ['TypeCasting(TC): Type Casting found: (BezierPath) geometry,', 'ReturnType(RT): Return Type found: getBezierPath returns BezierPath,  Return Type found: getCappedPath returns BezierPath,', 'Class Member Variable Usage Variable (CMAUA): Coupling found in method validate, at line: 270. Instance of BezierPath member variable cappedPath is used directly.  Coupling found in method setBezierPath, at line: 281. Instance of BezierPath member variable path is used directly.  Coupling found in method invalidate, at line: 332. Instance of BezierPath member variable cappedPath is used directly.  Coupling found in method getCappedPath, at line: 340. Instance of BezierPath member variable cappedPath is used directly.  Coupling found in method getCappedPath, at line: 341. Instance of BezierPath member variable cappedPath is used directly.  Coupling found in method getCappedPath, at line: 383. Instance of BezierPath member variable cappedPath is used directly.  Coupling found in method findNode, at line: 505. Instance of BezierPath member variable path is used directly.', 'StaticVariableInvoking(SAI): Static Variable Invoking found: getCappedPath invokes static variable C2_MASK,  Static Variable Invoking found: getCappedPath invokes static variable C1_MASK,  Static Variable Invoking found: getCappedPath invokes static variable C1_MASK,  Static Variable Invoking found: getCappedPath invokes static variable C2_MASK,', 'ConstructorInvoking(CMI): Construction Method Invoking found: new BezierPath(),', 'Function Parameter Invoking Method (FPIM): Coupling found in method setBezierPath, at line: 281. Instance of BezierPath parameter newValue is used to callBezierPath's method clone.  Coupling found in method setBezierPath, at line: 282. Instance of BezierPath parameter newValue is used to callBezierPath's method isClosed.', 'ConstructorInvoking(CMAIM): Coupling found in method drawCaps, at line: 140. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method drawCaps, at line: 143. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method drawCaps, at line: 149. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method drawCaps, at line: 149. Instance of BezierPath member variable path is used to call BezierPath's method size.  Coupling found in method drawCaps, at line: 150. Instance of BezierPath member variable path is used to call BezierPath's method size.  Coupling found in method drawCaps, at line: 152. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method drawCaps, at line: 152. Instance of BezierPath member variable path is used to call BezierPath's method size.  Coupling found in method contains, at line: 178. Instance of BezierPath member variable path is used to call BezierPath's method contains.  Coupling found in method contains, at line: 199. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method contains, at line: 208. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method contains, at line: 208. Instance of BezierPath member variable path is used to call BezierPath's method size.  Coupling found in method contains, at line: 209. Instance of BezierPath member variable path is used to call BezierPath's method size.  Coupling found in method createHandles, at line: 228. Instance of BezierPath member variable path is used to call BezierPath's method size.  Coupling found in method getBounds, at line: 242. Instance of BezierPath member variable path is used to call BezierPath's method getBounds2D.  Coupling found in method validate, at line: 269. Instance of BezierPath member variable path is used to call BezierPath's method invalidatePath.  Coupling found in method getBezierPath, at line: 277. Instance of BezierPath member variable path is used to call BezierPath's method clone.  Coupling found in method getPointOnPath, at line: 286. Instance of BezierPath member variable path is used to call BezierPath's method getPointOnPath.  Coupling found in method set, at line: 301. Instance of BezierPath member variable path is used to call BezierPath's method setClosed.  Coupling found in method set, at line: 303. Instance of BezierPath member variable path is used to call BezierPath's method setWindingRule.  Coupling found in method transform, at line: 324. Instance of BezierPath member variable path is used to call BezierPath's method transform.  Coupling found in method invalidate, at line: 331. Instance of BezierPath member variable path is used to call BezierPath's method invalidatePath.  Coupling found in method getCappedPath, at line: 341. Instance of BezierPath member variable path is used to call BezierPath's method clone.  Coupling found in method getCappedPath, at line: 343. Instance of BezierPath member variable cappedPath is used to call BezierPath's method setClosed.  Coupling found in method getCappedPath, at line: 345. Instance of BezierPath member variable cappedPath is used to call BezierPath's method size.  Coupling found in method getCappedPath, at line: 347. Instance of BezierPath member variable cappedPath is used to call BezierPath's method get.  Coupling found in method getCappedPath, at line: 348. Instance of BezierPath member variable cappedPath is used to call BezierPath's method get.  Coupling found in method getCappedPath, at line: 359. Instance of BezierPath member variable cappedPath is used to call BezierPath's method set.  Coupling found in method getCappedPath, at line: 362. Instance of BezierPath member variable cappedPath is used to call BezierPath's method get.  Coupling found in method getCappedPath, at line: 362. Instance of BezierPath member variable cappedPath is used to call BezierPath's method size.  Coupling found in method getCappedPath, at line: 363. Instance of BezierPath member variable cappedPath is used to call BezierPath's method get.  Coupling found in method getCappedPath, at line: 363. Instance of BezierPath member variable cappedPath is used to call BezierPath's method size.  Coupling found in method getCappedPath, at line: 377. Instance of BezierPath member variable cappedPath is used to call BezierPath's method set.  Coupling found in method getCappedPath, at line: 377. Instance of BezierPath member variable cappedPath is used to call BezierPath's method size.  Coupling found in method getCappedPath, at line: 379. Instance of BezierPath member variable cappedPath is used to call BezierPath's method invalidatePath.  Coupling found in method addNode, at line: 400. Instance of BezierPath member variable path is used to call BezierPath's method add.  Coupling found in method setNode, at line: 408. Instance of BezierPath member variable path is used to call BezierPath's method set.  Coupling found in method getNode, at line: 416. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method getPoint, at line: 424. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method getPoint, at line: 431. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method setPoint, at line: 438. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method setPoint, at line: 452. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method removeNode, at line: 566. Instance of BezierPath member variable path is used to call BezierPath's method remove.  Coupling found in method removeAllNodes, at line: 573. Instance of BezierPath member variable path is used to call BezierPath's method clear.  Coupling found in method getNodeCount, at line: 580. Instance of BezierPath member variable path is used to call BezierPath's method size.  Coupling found in method restoreTransformTo, at line: 593. Instance of BezierPath member variable path is used to call BezierPath's method setTo.  Coupling found in method getTransformRestoreData, at line: 598. Instance of BezierPath member variable path is used to call BezierPath's method clone.  Coupling found in method chop, at line: 605. Instance of BezierPath member variable path is used to call BezierPath's method chop.  Coupling found in method chop, at line: 613. Instance of BezierPath member variable path is used to call BezierPath's method chop.  Coupling found in method getCenter, at line: 618. Instance of BezierPath member variable path is used to call BezierPath's method getCenter.  Coupling found in method getOutermostPoint, at line: 622. Instance of BezierPath member variable path is used to call BezierPath's method get.  Coupling found in method getOutermostPoint, at line: 622. Instance of BezierPath member variable path is used to call BezierPath's method indexOfOutermostNode.  Coupling found in method joinSegments, at line: 631. Instance of BezierPath member variable path is used to call BezierPath's method joinSegments.  Coupling found in method splitSegment, at line: 639. Instance of BezierPath member variable path is used to call BezierPath's method splitSegment.  Coupling found in method readPoints, at line: 719. Instance of BezierPath member variable path is used to call BezierPath's method clear.  Coupling found in method readPoints, at line: 734. Instance of BezierPath member variable path is used to call BezierPath's method add.  Coupling found in method readPoints, at line: 735. Instance of BezierPath member variable path is used to call BezierPath's method invalidatePath.']
CombineAction : ['There are no coupling dependencies between these two entities']
LineConnectionFigure : ['There are no coupling dependencies between these two entities']
DrawApplicationModel : ['There are no coupling dependencies between these two entities']
HandleAttributeKeys : ['There are no coupling dependencies between these two entities']
DrawingPanel : ['There are no coupling dependencies between these two entities']
ElbowLiner : ['There are no coupling dependencies between these two entities']
RestoreDataEdit : ['RestoreDataEdit is not exist in project code']
ConnectionStartHandle : ['There are no coupling dependencies between these two entities']
TriangleFigure : ['There are no coupling dependencies between these two entities']
AbstractFigure : ['There are no coupling dependencies between these two entities']
CreationTool : ['There are no coupling dependencies between these two entities']
