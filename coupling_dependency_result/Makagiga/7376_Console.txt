ConsoleTab : ['There are no coupling dependencies between these two entities']
IO : ['IO is not exist in project code']
Projects : ['There are no coupling dependencies between these two entities']
Control : ['Control is not exist in project code']
Frame : ['Frame is not exist in project code']
ConsoleCommandLine : ['Class Member Variable Usage Variable (CMAUA): Coupling found in method getCommandLinePanel, at line: 496. Instance of ConsoleCommandLine member variable commandLinePanel is used directly.', 'Class Member Variable Invoking Variable (CMAIA): Coupling found in method executeCommand, at line: 455. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable commandLine.  Coupling found in method getCommandLine, at line: 487. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable commandLine.  Coupling found in method getPrompt, at line: 602. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable prompt.  Coupling found in method saveHistory, at line: 1082. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable commandLine.  Coupling found in method saveHistory, at line: 1088. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable commandLine.  Coupling found in method setConfigMode, at line: 1145. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable commandLine.  Coupling found in method updateFontSize, at line: 1158. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable prompt.  Coupling found in method updateFontSize, at line: 1159. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable commandLine.  Coupling found in method updatePromptText, at line: 1163. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable exitButton.  Coupling found in method updatePromptText, at line: 1176. Instance of ConsoleCommandLine member variable commandLinePanel is used to access ConsoleCommandLine's member variable exitButton.', 'ConstructorInvoking(CMI): Construction Method Invoking found: new ConsoleCommandLine(this),', 'ConstructorInvoking(CMAIM): Coupling found in method setConfigMode, at line: 1094. Instance of ConsoleCommandLine member variable commandLinePanel is used to call ConsoleCommandLine's method setVisible.']
Action : ['Action is not exist in project code']
ConsolePlugin : ['TypeCasting(TC): Type Casting found: (ConsolePlugin) i.getPlugin(),']
ConsoleCommand : ['ReturnType(RT): Return Type found: getCommand returns ConsoleCommand,', 'Method Member Variable Usage Variable (MMAUA): Coupling found in method initCommands, at line: 635. Instance of ConsoleCommand is created and used directly.  Coupling found in method initCommands, at line: 670. Instance of ConsoleCommand is created and used directly.  Coupling found in method initCommands, at line: 737. Instance of ConsoleCommand is created and used directly.  Coupling found in method initCommands, at line: 788. Instance of ConsoleCommand is created and used directly.  Coupling found in method initCommands, at line: 800. Instance of ConsoleCommand is created and used directly.', 'Class Member Variable Usage Variable (CMAUA): Coupling found in method executeCommand, at line: 339. Instance of ConsoleCommand member variable exclusiveCommand is used directly.  Coupling found in method executeCommand, at line: 373. Instance of ConsoleCommand member variable exclusiveCommand is used directly.  Coupling found in method executeCommand, at line: 378. Instance of ConsoleCommand member variable exclusiveCommand is used directly.  Coupling found in method setExclusiveMode, at line: 964. Instance of ConsoleCommand member variable exclusiveCommand is used directly.  Coupling found in method updatePromptText, at line: 1163. Instance of ConsoleCommand member variable exclusiveCommand is used directly.  Coupling found in method updatePromptText, at line: 1168. Instance of ConsoleCommand member variable exclusiveCommand is used directly.', 'Function Parameter Usage Variable (FPUA): Coupling found in method setExclusiveMode, at line: 964. Instance of ConsoleCommand parameter command is used directly.', 'ConstructorInvoking(CMI): Construction Method Invoking found: new ConsoleCommand("args", i18n("Show available command line arguments")) {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'ConsoleIO io = console.getIO();', 'String string = Args.toText();', 'for (String i : string.split("\n")) {', 'if (i.isEmpty())', 'io.printLine();', 'else', 'io.printRow(i);', '}', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("clear", i18n("Clear the output history.")) {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'Console.this.output.clear();', '// clear', 'ConsoleIO io = console.getIO();', 'if (io.getLog() != null)', 'io.getLog().clear();', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("crash", "Raise null pointer exception (test)") {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'try {', 'Objects.requireNonNull(null, "null");', '} catch (NullPointerException exception) {', 'MMessage.error(Console.this.getWindowAncestor(), exception);', '}', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("exit", i18n("Close")) {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'if (!Boolean.TRUE.equals(Mods.exec(console, Console.MOD_CLOSE_CONSOLE))) {', 'if (_frame != null)', '_frame.dispose();', '}', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("flush", "Flush internal caches") {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'if (io.getLog() != null)', 'io.getLog().flush();', 'MIcon.flushCache();', '// FileCache.getInstance().clear();', 'XMLHelper.clearContextCache();', 'return "OK";', '}', '},  Construction Method Invoking found: new ConsoleCommand("gc", "Run Garbage Collector (debug)") {', '', '@Override', '@SuppressFBWarnings("DM_GC")', 'public Object onCommand(final Console console, final String... args) {', 'Runtime rt = Runtime.getRuntime();', 'long before = rt.totalMemory() - rt.freeMemory();', 'System.gc();', 'long after = rt.totalMemory() - rt.freeMemory();', 'io.printResult("Heap memory usage =", MFormat.toMB(after));', 'long collected = before - after;', 'if (collected >= 0)', 'io.printResult("Garbage collected =", MFormat.toMB(collected));', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("getenv", "Show system environment variables") {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'Map<String, String> env = System.getenv();', 'int max = env.keySet().stream().mapToInt(String::length).max().getAsInt();', 'for (Map.Entry<String, String> i : TK.sortByKey(env, null).entrySet()) io.printRow("%-" + max + "s = %s", i.getKey(), i.getValue());', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("help", i18n("Show console commands")) {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'if (args.length == 1) {', 'String commandName = args[0];', 'ConsoleCommand command = console.getCommand(commandName);', 'if (command == null) {', 'io.printError(i18n("Unknown command: {0}", commandName));', '} else {', 'CommandOptions options = command.getCommandOptions();', 'if (options != null) {', 'io.printLine("Options:");', 'io.printLine(options.toString());', '} else {', 'io.printLine("No Options");', '}', '}', 'return null;', '}', '// TODO: clickable commands; clickable options', 'console.listCommands();', 'io.printLine();', 'if (io.getLog() != null)', 'io.printLine("Log: " + io.getLog().getFile());', 'io.printLine();', 'io.printLine("Type \"help <command name>\" to display additional options.");', 'io.printLine(i18n("See: {0}", "http://sourceforge.net/p/makagiga/wiki/Console/"));', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("mem", "Show memory information") {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'Runtime rt = Runtime.getRuntime();', 'io.printResult("Heap memory usage =", MFormat.toMB(rt.totalMemory() - rt.freeMemory()));', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("quit", i18n("Quit application")) {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'MApplication.quit();', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("reset", i18n("Reset variable (example: {0})", "reset UI.buttonIcons")) {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'if (args.length == 0)', 'return null;', 'Map<String, Property<?>> vars = Config.getDefault().getRegisteredProperties();', 'for (Map.Entry<String, Property<?>> i : vars.entrySet()) {', 'if (i.getKey().equals(args[0])) {', 'ConsoleIO io = console.getIO();', 'io.printResult("   ", Console.formatVar(i, -1, null));', 'i.getValue().reset();', 'io.printResult("=> ", Console.formatVar(i, -1, null));', '// for', 'break;', '}', '}', 'return null;', '}', '},  Construction Method Invoking found: new ConsoleCommand("uuidgen", "Generate an unique ID (used in plugins)") {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'final String uuid = TK.createRandomUUID();', 'MButton copyButton = new MButton(new MAction(MActionInfo.COPY, action -> {', 'try {', 'MClipboard.setString(uuid);', '} catch (ClipboardException exception) {', 'MLogger.exception(exception);', '}', '}));', 'console.getIO().printComponent(copyButton);', 'console.getIO().printLine();', 'return uuid;', '}', '},  Construction Method Invoking found: new ConsoleCommand("version", i18n("Show application version")) {', '', '@Override', 'public Object onCommand(final Console console, final String... args) {', 'ConsoleIO io = console.getIO();', 'String summary = OS.getSummary(false);', 'for (String i : summary.split("\n")) {', 'if (i.isEmpty())', 'io.printLine();', 'else', 'io.printRow(i);', '}', 'return null;', '}', '},', 'Function Parameter Invoking Method (FPIM): Coupling found in method register, at line: 939. Instance of ConsoleCommand parameter command is used to callConsoleCommand's method getName.  Coupling found in method register, at line: 946. Instance of ConsoleCommand parameter command is used to callConsoleCommand's method getAliasNames.', 'Method Member Variable Invoking Method (MMAIM): Coupling found in method initCommands, at line: 648. Instance of ConsoleCommand is used to call member method.  Coupling found in method initCommands, at line: 681. Instance of ConsoleCommand is used to call member method.  Coupling found in method initCommands, at line: 773. Instance of ConsoleCommand is used to call member method.  Coupling found in method initCommands, at line: 796. Instance of ConsoleCommand is used to call member method.  Coupling found in method initCommands, at line: 821. Instance of ConsoleCommand is used to call member method.', 'ConstructorInvoking(CMAIM): Coupling found in method executeCommand, at line: 374. Instance of ConsoleCommand member variable exclusiveCommand is used to call ConsoleCommand's method onHelp.  Coupling found in method executeCommand, at line: 379. Instance of ConsoleCommand member variable exclusiveCommand is used to call ConsoleCommand's method onExclusiveCommand.  Coupling found in method updatePromptText, at line: 1171. Instance of ConsoleCommand member variable exclusiveCommand is used to call ConsoleCommand's method getName.  Coupling found in method updatePromptText, at line: 1174. Instance of ConsoleCommand member variable exclusiveCommand is used to call ConsoleCommand's method getSmallIcon.  Coupling found in method updatePromptText, at line: 1176. Instance of ConsoleCommand member variable exclusiveCommand is used to call ConsoleCommand's method getName.']
MainWindow : ['There are no coupling dependencies between these two entities']
StaticAutoCompletionRenderer : ['StaticAutoCompletionRenderer is not exist in project code']
ScriptCommand : ['ConstructorInvoking(CMI): Construction Method Invoking found: new ScriptCommand(),']
MApplication : ['StaticVariableInvoking(SAI): Static Variable Invoking found: getInstanceBody invokes static variable consolePrintStdErr,  Static Variable Invoking found: updateFontSize invokes static variable consoleFontSize,  Static Variable Invoking found: updatePromptText invokes static variable consolePrompt,', 'StaticMethodInvoking(SMI): Static Method Invoking found: MApplication.quit(),']
ConsoleOutput : ['Class Member Variable Usage Variable (CMAUA): Coupling found in method run, at line: 269. Instance of ConsoleOutput member variable output is used directly.  Coupling found in method append, at line: 269. Instance of ConsoleOutput member variable output is used directly.  Coupling found in method getOutput, at line: 593. Instance of ConsoleOutput member variable output is used directly.', 'ConstructorInvoking(CMI): Construction Method Invoking found: new ConsoleOutput(),', 'ConstructorInvoking(CMAIM): Coupling found in method run, at line: 272. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method append.  Coupling found in method run, at line: 286. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method getDocument.  Coupling found in method run, at line: 287. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method clear.  Coupling found in method run, at line: 289. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method isDisplayable.  Coupling found in method run, at line: 290. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method scrollToEnd.  Coupling found in method append, at line: 272. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method append.  Coupling found in method append, at line: 286. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method getDocument.  Coupling found in method append, at line: 287. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method clear.  Coupling found in method append, at line: 289. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method isDisplayable.  Coupling found in method append, at line: 290. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method scrollToEnd.  Coupling found in method executeCommand, at line: 352. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method scrollToEnd.  Coupling found in method executeCommand, at line: 359. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method scrollToEnd.  Coupling found in method executeCommand, at line: 456. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method scrollToEnd.  Coupling found in method updateFontSize, at line: 1157. Instance of ConsoleOutput member variable output is used to call ConsoleOutput's method setFont.']
TodoCommand : ['There are no coupling dependencies between these two entities']
Kiosk : ['There are no coupling dependencies between these two entities']
HistoryCommand : ['TypeCasting(TC): Type Casting found: (HistoryCommand) getCommand("history"),', 'ReturnType(RT): Return Type found: getHistoryCommand returns HistoryCommand,', 'ConstructorInvoking(CMI): Construction Method Invoking found: new HistoryCommand(),']
TimelineEngine : ['TimelineEngine is not exist in project code']
ConsoleConfig : ['Method Member Variable Usage Variable (MMAUA): Coupling found in method setConfigMode, at line: 1103. Instance of ConsoleConfig is created and used directly.', 'Class Member Variable Usage Variable (CMAUA): Coupling found in method setConfigMode, at line: 1102. Instance of ConsoleConfig member variable consoleConfig is used directly.  Coupling found in method setConfigMode, at line: 1103. Instance of ConsoleConfig member variable consoleConfig is used directly.', 'ConstructorInvoking(CMI): Construction Method Invoking found: new ConsoleConfig(),', 'ConstructorInvoking(CMAIM): Coupling found in method setConfigMode, at line: 1107. Instance of ConsoleConfig member variable consoleConfig is used to call ConsoleConfig's method getModel.  Coupling found in method setConfigMode, at line: 1124. Instance of ConsoleConfig member variable consoleConfig is used to call ConsoleConfig's method updateModel.  Coupling found in method setConfigMode, at line: 1125. Instance of ConsoleConfig member variable consoleConfig is used to call ConsoleConfig's method requestFocusInWindow.  Coupling found in method setConfigMode, at line: 1128. Instance of ConsoleConfig member variable consoleConfig is used to call ConsoleConfig's method getColumnManager.  Coupling found in method setConfigMode, at line: 1148. Instance of ConsoleConfig member variable consoleConfig is used to call ConsoleConfig's method getColumnManager.']
JVisualVMCommand : ['JVisualVMCommand is not exist in project code']
VarListCommand : ['VarListCommand is not exist in project code']
PluginManager : ['StaticMethodInvoking(SMI): Static Method Invoking found: PluginManager.loadServices(ConsoleCommand.class),']
MLogger : ['StaticMethodInvoking(SMI): Static Method Invoking found: MLogger.exception(exception),  Static Method Invoking found: MLogger.exception(exception),']
SDK : ['There are no coupling dependencies between these two entities']
DebugCommand : ['ConstructorInvoking(CMI): Construction Method Invoking found: new DebugCommand(),']
Wizard : ['Wizard is not exist in project code']
SessionManager : ['There are no coupling dependencies between these two entities']
PluginInfo : ['There are no coupling dependencies between these two entities']
Main : ['There are no coupling dependencies between these two entities']
ProjectInternalNameValidator : ['ProjectInternalNameValidator is not exist in project code']
ProjectInfoForm : ['ProjectInfoForm is not exist in project code']
PackageNameValidator : ['PackageNameValidator is not exist in project code']
ProjectInternalNameForm : ['ProjectInternalNameForm is not exist in project code']
ProjectNameValidator : ['ProjectNameValidator is not exist in project code']
ProjectPackageForm : ['ProjectPackageForm is not exist in project code']
ProjectDescriptionValidator : ['ProjectDescriptionValidator is not exist in project code']
ProjectVersionValidator : ['ProjectVersionValidator is not exist in project code']
DeletePrivateDataPlugin : ['There are no coupling dependencies between these two entities']
IconTheme : ['There are no coupling dependencies between these two entities']
