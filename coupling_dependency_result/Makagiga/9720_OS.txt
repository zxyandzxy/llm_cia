OKCancelLayout : ['OKCancelLayout is not exist in project code']
MFrame : ['There are no coupling dependencies between these two entities']
LocalizedString : ['There are no coupling dependencies between these two entities']
MHandler : ['MHandler is not exist in project code']
Config : ['StaticMethodInvoking(SMI): Static Method Invoking found: Config.init(),']
Database : ['Database is not exist in project code']
ConsoleIO : ['There are no coupling dependencies between these two entities']
MAction : ['There are no coupling dependencies between these two entities']
ExternalFolderList : ['ExternalFolderList is not exist in project code']
FieldsPanel : ['FieldsPanel is not exist in project code']
PasswordForm : ['PasswordForm is not exist in project code']
Args : ['There are no coupling dependencies between these two entities']
MApplication : ['StaticMethodInvoking(SMI): Static Method Invoking found: MApplication.getAbout(),  Static Method Invoking found: MApplication.getPID(),  Static Method Invoking found: MApplication.getUptime(),  Static Method Invoking found: MApplication.getAbout(),']
Armor : ['There are no coupling dependencies between these two entities']
PluginManager : ['There are no coupling dependencies between these two entities']
MAboutDialog : ['There are no coupling dependencies between these two entities']
TK : ['StaticVariableInvoking(SAI): Static Variable Invoking found: email invokes static variable ESCAPE_SPACE,  Static Variable Invoking found: getPID invokes static variable SPLIT_PAIR_NULL_ERROR,  Static Variable Invoking found: getSummary invokes static variable EMPTY_STRING_ARRAY,', 'StaticMethodInvoking(SMI): Static Method Invoking found: TK.escapeURL(subject, TK.ESCAPE_SPACE),  Static Method Invoking found: TK.forEach(Screen.getAll(), (screen, i) -> {', 'result.formatLine("Screen Device #%d: %s", (i + 1), screen);', 'Rectangle r = screen.getBounds();', 'result.formatLine("  Bounds: x: %d | y: %d | size: %s", r.x, r.y, MFormat.dimension(r.getSize()));', 'Insets insets = screen.getInsets();', 'result.formatLine("  Insets: top: %d | bottom: %d | left: %d | right: %d", insets.top, insets.bottom, insets.left, insets.right);', '}),  Static Method Invoking found: TK.removePrefix(value, '"'),  Static Method Invoking found: TK.removeSuffix(value, '"'),  Static Method Invoking found: TK.toUpperCase(name),  Static Method Invoking found: TK.containsIgnoreCase(desktopSession, "KDE"),  Static Method Invoking found: TK.containsIgnoreCase(desktopSession, "GNOME"),  Static Method Invoking found: TK.containsIgnoreCase(desktopSession, "UBUNTU"),  Static Method Invoking found: TK.containsIgnoreCase(desktopSession, "XFCE"),  Static Method Invoking found: TK.containsIgnoreCase(desktopSession, "LXDE"),  Static Method Invoking found: TK.containsIgnoreCase(desktopSession, "MATE"),  Static Method Invoking found: TK.containsIgnoreCase(desktopSession, "cinnamon"),  Static Method Invoking found: TK.containsIgnoreCase(desktopSession, "LXQT"),  Static Method Invoking found: TK.containsIgnoreCase(desktopSession, "enlightenment"),  Static Method Invoking found: TK.uninstantiable(),  Static Method Invoking found: TK.isEmpty(LANG),  Static Method Invoking found: TK.fastSplit(command.replace("%u", url), ' '),  Static Method Invoking found: TK.fastSplit(command, ' '),  Static Method Invoking found: TK.fastSplit(pathEnv, ':'),  Static Method Invoking found: TK.newArrayList(// TODO: LXQt?', 'Tuple.of(i18n("Auto Detect"), "", true), Tuple.of("", "", false), Tuple.of("Cinnamon", "gvfs-open", isInstalled(dirList, "gvfs-open")), Tuple.of("Enlightenment", "enlightenment_open", isEnlightenment() && isInstalled(dirList, "enlightenment_open")), Tuple.of("GNOME", "gnome-open", isGNOME() && isInstalled(dirList, "gnome-open")), Tuple.of("KDE 5.x", "kde-open5", isKDE() && isInstalled(dirList, "kde-open5")), Tuple.of("KDE 4.x", "kde-open", isKDE() && isInstalled(dirList, "kde-open")), Tuple.of("MATE", "gvfs-open", isInstalled(dirList, "gvfs-open")), Tuple.of("Xfce", "exo-open", isXfce() && isInstalled(dirList, "exo-open")), Tuple.of(i18n("Auto Detect"), "xdg-open", isInstalled(dirList, "xdg-open")), Tuple.of("", "", false), Tuple.of("Firefox", "firefox", isInstalled(dirList, "firefox")), Tuple.of("Konqueror", "konqueror", isInstalled(dirList, "konqueror")), Tuple.of("Chromium", "chromium-browser", isInstalled(dirList, "chromium-browser")), Tuple.of("Opera", "opera", isInstalled(dirList, "opera"))),']
FS : ['StaticMethodInvoking(SMI): Static Method Invoking found: FS.getConfigDirectory(),  Static Method Invoking found: FS.getProfile(),  Static Method Invoking found: FS.getProfile(),  Static Method Invoking found: FS.getBaseDirectory(),  Static Method Invoking found: FS.lines(Paths.get("/etc/passwd"), stream -> stream.map(line -> line.split("\\:")).filter(fields -> (fields.length == 7) && getUserName().equals(fields[0])).map(fields -> fields[4].split("\\,")).filter(userInfo -> userInfo.length > 0).findFirst().ifPresent(userInfo -> userFullName = userInfo[0])),  Static Method Invoking found: FS.getBaseDirectory(),']
ImageSelection : ['There are no coupling dependencies between these two entities']
HelpGenerator : ['There are no coupling dependencies between these two entities']
Projects : ['There are no coupling dependencies between these two entities']
UI : ['StaticVariableInvoking(SAI): Static Variable Invoking found: getSummary invokes static variable TM,', 'StaticMethodInvoking(SMI): Static Method Invoking found: UI.isSynth(),  Static Method Invoking found: UI.isWindowsClassic(),  Static Method Invoking found: UI.invokeLater(() -> {', 'String text = i18n("Could not open: {0}", uri);', 'if (!isDesktopAPIReliable() && !GeneralSettings.inTest) {', 'text += "\n\n" + i18n("Click \"Settings\" to set your default file browser/launcher.");', 'if (new MMessage.Builder().icon("ui/error").ok(MActionInfo.SETTINGS).text(text).exec()) {', 'GeneralSettings settings = new GeneralSettings();', 'settings.openCommandOnly = true;', 'settings.exec(UI.windowFor(null));', '}', '} else {', 'MMessage.error(UI.windowFor(null), text);', '}', '}),  Static Method Invoking found: UI.windowFor(null),  Static Method Invoking found: UI.windowFor(null),  Static Method Invoking found: UI.windowFor(null),']
TaskTable : ['There are no coupling dependencies between these two entities']
Item : ['Item is not exist in project code']
GeneralSettings : ['StaticVariableInvoking(SAI): Static Variable Invoking found: open invokes static variable inTest,', 'Method Member Variable Invoking (MMAIA): Coupling found in method open, at line: 810. Instance of GeneralSettings is used to access member variable.', 'ConstructorInvoking(CMI): Construction Method Invoking found: new GeneralSettings(),', 'Method Member Variable Invoking Method (MMAIM): Coupling found in method open, at line: 811. Instance of GeneralSettings is used to call member method.']
IconTheme : ['There are no coupling dependencies between these two entities']
MDate : ['MDate is not exist in project code']
MFileChooser : ['There are no coupling dependencies between these two entities']
MLoginPanel : ['There are no coupling dependencies between these two entities']
ActionProperties : ['ActionProperties is not exist in project code']
MDataTransfer : ['There are no coupling dependencies between these two entities']
UpdatePanel : ['There are no coupling dependencies between these two entities']
MText : ['There are no coupling dependencies between these two entities']
BackupDialog : ['There are no coupling dependencies between these two entities']
MSystemTray : ['There are no coupling dependencies between these two entities']
DebugCommand : ['There are no coupling dependencies between these two entities']
MainWindow : ['There are no coupling dependencies between these two entities']
MMessage : ['StaticMethodInvoking(SMI): Static Method Invoking found: MMessage.error(UI.windowFor(null), text),  Static Method Invoking found: MMessage.error(UI.windowFor(null), i18n("Could not send mail: {0}", uri)),']
Wizard : ['Wizard is not exist in project code']
ProjectInternalNameValidator : ['ProjectInternalNameValidator is not exist in project code']
ProjectPluginIDValidator : ['ProjectPluginIDValidator is not exist in project code']
