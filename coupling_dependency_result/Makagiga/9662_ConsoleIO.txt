Console : ['Class Member Variable Usage Variable (CMAUA): Coupling found in method install, at line: 213. Instance of Console member variable console is used directly.  Coupling found in method print, at line: 285. Instance of Console member variable console is used directly.  Coupling found in method print, at line: 291. Instance of Console member variable secondaryConsole is used directly.', 'StaticMethodInvoking(SMI): Static Method Invoking found: Console.isInstance(),  Static Method Invoking found: Console.getInstance(false),  Static Method Invoking found: Console.getInstance(true),', 'ConstructorInvoking(CMI): Construction Method Invoking found: new Console(false),', 'Method Member Variable Invoking Method (MMAIM): Coupling found in method install, at line: 197. Instance of Console is used to call member method.  Coupling found in method install, at line: 200. Instance of Console is used to call member method.  Coupling found in method install, at line: 205. Instance of Console is used to call member method.  Coupling found in method install, at line: 206. Instance of Console is used to call member method.', 'ConstructorInvoking(CMAIM): Coupling found in method install, at line: 197. Instance of Console member variable console is used to call Console's method setPreferredSize.  Coupling found in method install, at line: 200. Instance of Console member variable console is used to call Console's method getOutput.  Coupling found in method install, at line: 205. Instance of Console member variable console is used to call Console's method getCommandLinePanel.  Coupling found in method install, at line: 206. Instance of Console member variable console is used to call Console's method getToolBar.  Coupling found in method print, at line: 288. Instance of Console member variable console is used to call Console's method append.  Coupling found in method print, at line: 294. Instance of Console member variable secondaryConsole is used to call Console's method append.  Coupling found in method readPassword, at line: 529. Instance of Console member variable console is used to call Console's method getWindowAncestor.']
ScriptCommand : ['There are no coupling dependencies between these two entities']
ConsoleTab : ['There are no coupling dependencies between these two entities']
Projects : ['There are no coupling dependencies between these two entities']
TodoCommand : ['There are no coupling dependencies between these two entities']
HistoryCommand : ['There are no coupling dependencies between these two entities']
ConsoleCommandLine : ['There are no coupling dependencies between these two entities']
VarListCommand : ['VarListCommand is not exist in project code']
Action : ['Action is not exist in project code']
StaticAutoCompletionRenderer : ['StaticAutoCompletionRenderer is not exist in project code']
ConsolePlugin : ['There are no coupling dependencies between these two entities']
DebugCommand : ['There are no coupling dependencies between these two entities']
ConsoleCommand : ['Function Parameter Invoking Method (FPIM): Coupling found in method readLine, at line: 517. Instance of ConsoleCommand parameter command is used to callConsoleCommand's method getName.']
MainWindow : ['There are no coupling dependencies between these two entities']
SDK : ['There are no coupling dependencies between these two entities']
NoteWidget : ['There are no coupling dependencies between these two entities']
Wizard : ['Wizard is not exist in project code']
MApplication : ['StaticVariableInvoking(SAI): Static Variable Invoking found: isEnabled invokes static variable consolePrintStdErr,  Static Variable Invoking found: isEnabled invokes static variable consolePrintStdOut,', 'StaticMethodInvoking(SMI): Static Method Invoking found: MApplication.getLogFile(),  Static Method Invoking found: MApplication.getLogFile(),  Static Method Invoking found: MApplication.addShutDownListener(e -> {', 'if (Console.isInstance()) {', 'for (ConsoleCommand i : Console.getInstance(false)) {', 'if (i instanceof MDisposable)', 'TK.dispose((MDisposable) i);', '}', '}', 'synchronized (ConsoleIO.class) {', 'if (_systemIO != null) {', '_systemIO.shutDown();', '_systemIO = null;', '}', '}', '}),  Static Method Invoking found: MApplication.isInitialized(),  Static Method Invoking found: MApplication.isShutDown(),  Static Method Invoking found: MApplication.getLogFile(),']
Permission : ['Permission is not exist in project code']
MDownloadDialog : ['There are no coupling dependencies between these two entities']
Frame : ['Frame is not exist in project code']
StdOut : ['StdOut is not exist in project code']
ConsoleOutput : ['There are no coupling dependencies between these two entities']
TimelineEngine : ['TimelineEngine is not exist in project code']
Main : ['There are no coupling dependencies between these two entities']
Kiosk : ['StaticVariableInvoking(SAI): Static Variable Invoking found: doHandleUncaughtException invokes static variable consoleEnabled,']
ConsoleConfig : ['There are no coupling dependencies between these two entities']
AbstractFileCache : ['There are no coupling dependencies between these two entities']
PIMData : ['There are no coupling dependencies between these two entities']
ImageModelIO : ['ImageModelIO is not exist in project code']
ProjectInternalNameValidator : ['ProjectInternalNameValidator is not exist in project code']
ProjectPluginIDValidator : ['ProjectPluginIDValidator is not exist in project code']
ProjectInfoForm : ['ProjectInfoForm is not exist in project code']
PackageNameValidator : ['PackageNameValidator is not exist in project code']
ProjectInternalNameForm : ['ProjectInternalNameForm is not exist in project code']
ProjectNameValidator : ['ProjectNameValidator is not exist in project code']
ProjectPackageForm : ['ProjectPackageForm is not exist in project code']
ProjectDescriptionValidator : ['ProjectDescriptionValidator is not exist in project code']
ProjectVersionValidator : ['ProjectVersionValidator is not exist in project code']
SimpleXMLReader : ['There are no coupling dependencies between these two entities']
MFileChooser : ['There are no coupling dependencies between these two entities']
