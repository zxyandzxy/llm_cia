AddTaskAction : ['AddTaskAction is not exist in project code']
TodoEditorCore : ['TypeCasting(TC): Type Casting found: (TodoEditorCore) editor.getCore(),', 'ReturnType(RT): Return Type found: getTodoEditor returns TodoEditorCore,']
Action : ['Action is not exist in project code']
TodoEditor : ['Instanceof(IO): Instanceof found: editor instanceof TodoEditor,', 'Method Member Variable Usage Variable (MMAUA): Coupling found in method create, at line: 152. Instance of TodoEditor is created and used directly.', 'ConstructorInvoking(CMI): Construction Method Invoking found: new TodoEditor(),']
ImportAction : ['ImportAction is not exist in project code']
Main : ['There are no coupling dependencies between these two entities']
CutAction : ['CutAction is not exist in project code']
PasteAction : ['PasteAction is not exist in project code']
SelectAllAction : ['SelectAllAction is not exist in project code']
UnselectAllAction : ['UnselectAllAction is not exist in project code']
CopyAction : ['CopyAction is not exist in project code']
DeleteCompletedAction : ['DeleteCompletedAction is not exist in project code']
DeleteAction : ['DeleteAction is not exist in project code']
PluginMenu : ['There are no coupling dependencies between these two entities']
SummaryTree : ['There are no coupling dependencies between these two entities']
SummaryData : ['There are no coupling dependencies between these two entities']
TrackerItem : ['TrackerItem is not exist in project code']
TrackerEvent : ['There are no coupling dependencies between these two entities']
EditorPlugin : ['There are no coupling dependencies between these two entities']
SelectionAction : ['SelectionAction is not exist in project code']
NewFileAction : ['NewFileAction is not exist in project code']
ExportAction : ['ExportAction is not exist in project code']
TodoEditorDesigner : ['There are no coupling dependencies between these two entities']
StatsPanel : ['StatsPanel is not exist in project code']
NotepadEditorPlugin : ['There are no coupling dependencies between these two entities']
TextEditorPlugin : ['There are no coupling dependencies between these two entities']
AbstractImportExportAction : ['AbstractImportExportAction is not exist in project code']
LinkEditorPlugin : ['There are no coupling dependencies between these two entities']
DnDTransferHandler : ['There are no coupling dependencies between these two entities']
EditorExport : ['There are no coupling dependencies between these two entities']
Editor : ['There are no coupling dependencies between these two entities']
AnnotationBar : ['AnnotationBar is not exist in project code']
ScriptIDE : ['There are no coupling dependencies between these two entities']
MainWindow : ['StaticMethodInvoking(SMI): Static Method Invoking found: MainWindow.getInstance(),  Static Method Invoking found: MainWindow.getInstance(),']
ImportExport : ['There are no coupling dependencies between these two entities']
PluginManager : ['There are no coupling dependencies between these two entities']
AbstractFS : ['There are no coupling dependencies between these two entities']
MetaInfo : ['Function Parameter Usage Variable (FPUA): Coupling found in method getPreloadedTaskList, at line: 117. Instance of MetaInfo parameter metaInfo is used directly.', 'StaticVariableInvoking(SAI): Static Variable Invoking found: showTask invokes static variable OWNER,', 'StaticMethodInvoking(SMI): Static Method Invoking found: MetaInfo.createDummy(i18n("New File"), MIcon.small("ui/newfile")),', 'Function Parameter Invoking Method (FPIM): Coupling found in method showTask, at line: 258. Instance of MetaInfo parameter metaInfo is used to callMetaInfo's method getFS.  Coupling found in method showTask, at line: 259. Instance of MetaInfo parameter metaInfo is used to callMetaInfo's method getProperty.  Coupling found in method getTodoEditor, at line: 342. Instance of MetaInfo parameter metaInfo is used to callMetaInfo's method toPath.']
TypeSelection : ['TypeSelection is not exist in project code']
TreeFS : ['StaticMethodInvoking(SMI): Static Method Invoking found: TreeFS.getInstance(),']
Tabs : ['StaticMethodInvoking(SMI): Static Method Invoking found: Tabs.getInstance(),']
