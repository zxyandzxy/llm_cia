ExpressionColumn : ['TypeCasting(TC): Type Casting found: (ExpressionColumn) namedJoinColumnExpressions.get(name),  ', 'ReturnType(RT): Return Type found: getColumnExpression returns ExpressionColumn,  ', 'Method Member Variable Usage Variable (MMAUA): Coupling found in method addTableColumns, at line: 565. Instance of ExpressionColumn is created and used directly.  Coupling found in method addTableColumns, at line: 589. Instance of ExpressionColumn is created and used directly.  ', "Function Parameter Invoking Variable (FPIA): Coupling found in method findColumn, at line: 365. Instance of ExpressionColumn parameter e is used to access ExpressionColumn's member variable columnName.  Coupling found in method resolvesTableName, at line: 441. Instance of ExpressionColumn parameter e is used to access ExpressionColumn's member variable tableName.  Coupling found in method resolvesTableName, at line: 447. Instance of ExpressionColumn parameter e is used to access ExpressionColumn's member variable tableName.  Coupling found in method resolvesTableName, at line: 453. Instance of ExpressionColumn parameter e is used to access ExpressionColumn's member variable schema.  Coupling found in method resolvesTableName, at line: 455. Instance of ExpressionColumn parameter e is used to access ExpressionColumn's member variable tableName.  Coupling found in method resolvesTableName, at line: 458. Instance of ExpressionColumn parameter e is used to access ExpressionColumn's member variable tableName.  Coupling found in method resolvesTableName, at line: 463. Instance of ExpressionColumn parameter e is used to access ExpressionColumn's member variable tableName.  Coupling found in method resolvesTableName, at line: 464. Instance of ExpressionColumn parameter e is used to access ExpressionColumn's member variable schema.  ", 'ConstructorInvoking(CMI): Construction Method Invoking found: new ExpressionColumn(this, i),  Construction Method Invoking found: new ExpressionColumn(this, i),']
QuerySpecification : ['There are no coupling dependencies between these two entities']
TriggerDef : ['There are no coupling dependencies between these two entities']
RangeVariableJoined : ['Inheritance(IH): Inheritance found: RangeVariableJoined extends RangeVariable,']
