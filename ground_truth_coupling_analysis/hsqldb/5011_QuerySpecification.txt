QueryExpression : ['There are no coupling dependencies between these two entities']
Expression : ['TypeCasting(TC): Type Casting found: (Expression) (exprColumnList.get(pos)),  Type Casting found: (Expression) list.get(i),  Type Casting found: (Expression) sortAndSlice.exprList.get(i),  Type Casting found: (Expression) unresolvedExpressions.get(i),  Type Casting found: (Expression) tempSet.get(0),  Type Casting found: (Expression) tempSet.get(0),  Type Casting found: (Expression) tempSet.get(0),  Type Casting found: (Expression) sortAndSlice.exprList.get(i),  Type Casting found: (Expression) sortAndSlice.exprList.get(i),  Type Casting found: (Expression) sortAndSlice.exprList.get(i),  Type Casting found: (Expression) aggregateSet.get(i),  Type Casting found: (Expression) resolvedSubqueryExpressions.get(i),  Type Casting found: (Expression) unresolvedSet.get(i),  Type Casting found: (Expression) tempSet.get(i),  ', 'ReturnType(RT): Return Type found: getEquiJoinExpressions returns Expression,  Return Type found: getCheckCondition returns Expression,  ', 'Class Member Variable Usage Variable (CMAUA): Coupling found in method addQueryCondition, at line: 175. Instance of Expression member variable queryCondition is used directly.  Coupling found in method addHavingExpression, at line: 195. Instance of Expression member variable havingCondition is used directly.  Coupling found in method collectRangeVariables, at line: 556. Instance of Expression member variable queryCondition is used directly.  Coupling found in method collectRangeVariables, at line: 560. Instance of Expression member variable havingCondition is used directly.  Coupling found in method resolveExpressionTypes, at line: 608. Instance of Expression member variable queryCondition is used directly.  Coupling found in method resolveExpressionTypes, at line: 616. Instance of Expression member variable havingCondition is used directly.  Coupling found in method setRangeVariableConditions, at line: 659. Instance of Expression member variable queryCondition is used directly.  Coupling found in method resolveGroups, at line: 807. Instance of Expression member variable havingCondition is used directly.  Coupling found in method buildResult, at line: 1212. Instance of Expression member variable havingCondition is used directly.  Coupling found in method getSQL, at line: 1433. Instance of Expression member variable havingCondition is used directly.  Coupling found in method describe, at line: 1518. Instance of Expression member variable queryCondition is used directly.  Coupling found in method describe, at line: 1537. Instance of Expression member variable havingCondition is used directly.  Coupling found in method collectObjectNames, at line: 1680. Instance of Expression member variable queryCondition is used directly.  Coupling found in method collectObjectNames, at line: 1684. Instance of Expression member variable havingCondition is used directly.  Coupling found in method getMergedSelect, at line: 1693. Instance of Expression member variable queryCondition is used directly.  Coupling found in method getMergedSelect, at line: 1722. Instance of Expression member variable checkQueryCondition is used directly.  Coupling found in method getMergedSelect, at line: 1725. Instance of Expression member variable queryCondition is used directly.  Coupling found in method getMergedSelect, at line: 1728. Instance of Expression member variable queryCondition is used directly.  Coupling found in method getMergedSelect, at line: 1756. Instance of Expression member variable checkQueryCondition is used directly.  Coupling found in method getMergedSelect, at line: 1764. Instance of Expression member variable checkQueryCondition is used directly.  Coupling found in method getMergedSelect, at line: 1764. Instance of Expression member variable queryCondition is used directly.  Coupling found in method getCheckCondition, at line: 1825. Instance of Expression member variable queryCondition is used directly.  ', 'Function Parameter Usage Variable (FPUA): Coupling found in method addQueryCondition, at line: 175. Instance of Expression parameter e is used directly.  Coupling found in method addHavingExpression, at line: 195. Instance of Expression parameter e is used directly.  Coupling found in method resolveColumnReferences, at line: 299. Instance of Expression parameter e is used directly.  Coupling found in method resolveColumnReferencesAndAllocate, at line: 359. Instance of Expression parameter expression is used directly.  ', 'StaticVariableInvoking(SAI): Static Variable Invoking found: resolveGroups invokes static variable aggregateFunctionSet,  Static Variable Invoking found: resolveGroups invokes static variable subqueryExpressionSet,  Static Variable Invoking found: resolveGroups invokes static variable subqueryAggregateExpressionSet,  Static Variable Invoking found: resolveGroups invokes static variable columnExpressionSet,  Static Variable Invoking found: resolveGroups invokes static variable aggregateFunctionSet,  Static Variable Invoking found: resolveGroups invokes static variable subqueryAggregateExpressionSet,  Static Variable Invoking found: resolveGroups invokes static variable emptyExpressionSet,  Static Variable Invoking found: resolveGroups invokes static variable emptyExpressionSet,  Static Variable Invoking found: getMergedSelect invokes static variable subqueryExpressionSet,  Static Variable Invoking found: getMergedSelect invokes static variable emptyExpressionSet,  ', "Function Parameter Invoking Variable (FPIA): Coupling found in method resolveColumnReferencesAndAllocate, at line: 388. Instance of Expression parameter expression is used to access Expression's member variable isAggregate.  Coupling found in method addAllJoinedColumns, at line: 502. Instance of Expression parameter e is used to access Expression's member variable nodes.  ", 'StaticMethodInvoking(SMI): Static Method Invoking found: Expression.collectAllExpressions(tempSet, exprColumns[i], Expression.aggregateFunctionSet, Expression.subqueryExpressionSet),  Static Method Invoking found: Expression.collectAllExpressions(tempSet, exprColumns[i], Expression.columnExpressionSet, Expression.aggregateFunctionSet),  Static Method Invoking found: Expression.collectAllExpressions(set, exprColumns[i], typeSet, stopAtTypeSet),  Static Method Invoking found: Expression.collectAllExpressions(set, queryCondition, typeSet, stopAtTypeSet),  Static Method Invoking found: Expression.collectAllExpressions(set, havingCondition, typeSet, stopAtTypeSet),  Static Method Invoking found: Expression.collectAllExpressions(tempSet, queryCondition, Expression.subqueryExpressionSet, Expression.emptyExpressionSet),  ', "Function Parameter Invoking Method (FPIM): Coupling found in method addSelectColumnExpression, at line: 165. Instance of Expression parameter e is used to callExpression's method getType.  Coupling found in method addGroupByColumnExpression, at line: 180. Instance of Expression parameter e is used to callExpression's method getType.  Coupling found in method resolveColumnReferences, at line: 307. Instance of Expression parameter e is used to callExpression's method resolveColumnReferences.  Coupling found in method resolveColumnReferencesAndAllocate, at line: 363. Instance of Expression parameter expression is used to callExpression's method resolveColumnReferences.  Coupling found in method replaceColumnIndexInOrderBy, at line: 531. Instance of Expression parameter orderBy is used to callExpression's method getLeftNode.  Coupling found in method replaceColumnIndexInOrderBy, at line: 541. Instance of Expression parameter orderBy is used to callExpression's method setLeftNode.  ", "ConstructorInvoking(CMAIM): Coupling found in method collectRangeVariables, at line: 557. Instance of Expression member variable queryCondition is used to call Expression's method collectRangeVariables.  Coupling found in method collectRangeVariables, at line: 561. Instance of Expression member variable havingCondition is used to call Expression's method collectRangeVariables.  Coupling found in method resolveExpressionTypes, at line: 609. Instance of Expression member variable queryCondition is used to call Expression's method resolveTypes.  Coupling found in method resolveExpressionTypes, at line: 611. Instance of Expression member variable queryCondition is used to call Expression's method getDataType.  Coupling found in method resolveExpressionTypes, at line: 617. Instance of Expression member variable havingCondition is used to call Expression's method resolveTypes.  Coupling found in method resolveExpressionTypes, at line: 619. Instance of Expression member variable havingCondition is used to call Expression's method getDataType.  Coupling found in method resolveGroups, at line: 817. Instance of Expression member variable havingCondition is used to call Expression's method isComposedOf.  Coupling found in method getSQL, at line: 1435. Instance of Expression member variable havingCondition is used to call Expression's method getSQL.  Coupling found in method describe, at line: 1519. Instance of Expression member variable queryCondition is used to call Expression's method describe.  Coupling found in method describe, at line: 1538. Instance of Expression member variable havingCondition is used to call Expression's method describe.  Coupling found in method collectObjectNames, at line: 1681. Instance of Expression member variable queryCondition is used to call Expression's method collectObjectNames.  Coupling found in method collectObjectNames, at line: 1685. Instance of Expression member variable havingCondition is used to call Expression's method collectObjectNames."]
ParserDQL : ['There are no coupling dependencies between these two entities']
TableDerived : ['TypeCasting(TC): Type Casting found: (TableDerived) table,  ', 'Instanceof(IO): Instanceof found: table instanceof TableDerived,  ', 'Method Member Variable Usage Variable (MMAUA): Coupling found in method createResultTable, at line: 1373. Instance of TableDerived is created and used directly.  ', 'ConstructorInvoking(CMI): Construction Method Invoking found: new TableDerived(session.database, tableName, tableType, columnTypes, columnList, null),']
ParserDML : ['There are no coupling dependencies between these two entities']
